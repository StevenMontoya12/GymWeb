@using BlazorFrontend.Services
@inject AuthService AuthService
@inject NavigationManager Navigation

<Router AppAssembly="@typeof(App).Assembly">
    <Found Context="routeData">
        <RouteView RouteData="routeData" DefaultLayout="@typeof(MainLayout)" />
    </Found>
    <NotFound>
        <RedirectToLogin />
    </NotFound>
</Router>

@code {
    protected override async Task OnInitializedAsync()
    {
        // Inicializa el estado de autenticación (token en local storage)
        await AuthService.InitializeAuthStateAsync();
        
        // Si el usuario no está autenticado y se dirige a una página restringida, redirigir
        var currentPath = Navigation.ToBaseRelativePath(Navigation.Uri);

        if (!AuthService.IsAuthenticated && 
            currentPath != "" && currentPath != "login" && currentPath != "registrar")
        {
            Navigation.NavigateTo("/acceso-denegado");
        }
    }

    private class RedirectToLogin : ComponentBase
    {
        [Inject] NavigationManager Navigation { get; set; }

        protected override void OnInitialized()
        {
            Navigation.NavigateTo("/");
        }
    }
}
